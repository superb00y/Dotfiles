# source "$HOME/.config/tmux/tools/linkarzu/tmux_colors.sh"
set -g prefix M-Space

set -sg terminal-overrides ",*:RGB"
set -g default-terminal "${TERM}"
set -gq allow-passthrough on
set -g visual-activity off

unbind Space
bind-key Space switch-client -l

set -g mode-keys vi
set -g pane-border-lines single
set -g pane-border-indicators arrows
set-option -g focus-events on

bind s choose-tree -Zs -O time -F "#{session_windows}"
# bind s choose-tree -Zs -O time
# bind s choose-tree -Zs -O time -y
# bind s choose-tree -Zs -O time -F "#{session_windows}" -y
# bind s choose-tree -Zs -O time -F "#{?session_attached,#[fg=$linkarzu_color02],#[fg=$linkarzu_color03]}#{session_name}#[default]" -y
# bind s choose-tree -Zs -O time -F "#{?session_attached,#[fg=$linkarzu_color02],#[fg=$linkarzu_color03]}" -y
bind -n d if -F '#{==:#{pane_mode},tree-mode}' 'send x' 'send d'
# bind -n d if -F '#{==:#{pane_mode},tree-mode}' 'send t' 'send d'
bind -n D if -F '#{==:#{pane_mode},tree-mode}' 'send X' 'send D'

unbind '|'
unbind '\'
bind '\' split-window -h

unbind '-'
bind - split-window -v

unbind p
bind u select-window -t 1
bind i select-window -t 2
bind o select-window -t 3
bind p select-window -t 4


# If you want to use the default meta key, which is 'option' in macos, you have to
# configure the alacritty 'option_as_alt' option, but that messed up my hyper key,
# so if I enable that option in alacritty, I cant do hyper+b which is what I use for
# tmux commands instead of ctrl+b. So instead, I'll just remap these
unbind J
unbind K
# unbind L
unbind C-j
unbind C-k
unbind C-l
bind J select-layout even-horizontal
bind K select-layout even-vertical
# bind L select-layout tiled
# bind L run-shell ~/github/dotfiles-latest/tmux/layouts/7030/apply_layout.sh
bind C-j select-layout main-horizontal
bind C-k select-layout main-vertical
bind C-l run-shell ~/.config/tmux/layouts/2x3/apply_layout.sh

# Update: In karabiner elements I remapped hyper+f to ctrl+b which allows me to
# now use the meta key, just make sure to configure option as alt in your
# terminal if using macos, I configured it only for the right option key, as I
# use the left option key for unicode input sequences
# These require Ctrl-b first, then Alt+key

bind M-j select-layout even-horizontal
bind M-k select-layout even-vertical
bind M-l run-shell ~/.config/tmux/layouts/7030/apply_layout.sh

# You can also use uppercase characters with alt, this is Alt+shift+key

bind M-J select-layout main-horizontal 
bind M-K select-layout main-vertical
bind M-L run-shell ~/.config/tmux/layouts/2x3/apply_layout.sh

###############################################################################
# ThePrimeagen's tmux-sessionizer script, got 'em
###############################################################################

# ThePrimeagen's tmux-sessionizer script, got 'em
# I don't really care what these mappings are, pressing ctrl+* doesn't make any
# sense whatsoever, because it's not ergonomic, but I call them from
# bettertouchtool, and BTT is called from karabiner-elements

tmux_sessionizer="~/.config/tmux/tools/prime/tmux-sessionizer.sh"
tmux_sshonizer_agen="~/.config/tmux/tools/linkarzu/tmux-sshonizer-agen.sh"
ssh_select="~/.config/tmux/tools/linkarzu/ssh-select.sh"
# Script below goes through you `~/.ssh/config` file and shows the hosts in an fzf menu
ssh_config_select="~/.config/tmux/tools/linkarzu/ssh_config_select.sh"
daily_note="~/.config/scripts/macos/mac/300-dailyNote.sh"

# I tend to forget my karabiner mappings, so this opens the file in a new tmux
# session
karabiner_rules="~/github/scripts/macos/mac/301-openKarabinerRules.sh"

colorscheme_selector="~/github/dotfiles-latest/colorscheme/colorscheme-selector.sh"

# Don't use C-r because it's used by tmux-resurrect
# Don't use C-e because I'm already using it for sending command to all panes/windows in current session
# Don't use C-s because Its used to save the session
# Don't use C-z, not sure what its for

unbind C-u
bind-key -r C-u run-shell "$tmux_sessionizer ~/NOTES"

unbind C-i
bind-key -r C-i run-shell "$tmux_sessionizer ~/STUDY/l3/PFE/"

unbind C-o
bind-key -r C-o run-shell "$tmux_sessionizer ~/STUDY/l3/THESIS"

unbind C-p
bind-key -r C-p run-shell "$tmux_sessionizer ~/STUDY/l3/Projects"

unbind C-t
bind-key -r C-t run-shell "$tmux_sessionizer ~/github/obsidian_main"

unbind 4
bind-key -r 4 run-shell "$tmux_sessionizer ~/github/containerdata"

unbind C-y
bind-key -r C-y run-shell "$tmux_sessionizer /System/Volumes/Data/mnt/containerdata_nfs"

unbind C-h
bind-key -r C-h run-shell "$tmux_sessionizer ~"

unbind C-m
bind-key -r C-m run-shell "$tmux_sessionizer ~/github/containerdata-public"

unbind 3
bind-key -r 3 run-shell "$tmux_sessionizer ~/github/go"
# Leaving this in quotes because iCloud dir has a white space

unbind C-g
bind-key -r C-g run-shell "$tmux_sessionizer ~/github/php"

# bind-key -r C-g run-shell "$tmux_sessionizer '$HOME/Library/Mobile Documents/com~apple~CloudDocs/github/macos-setup'"

unbind C-w
bind-key -r C-w run-shell "$tmux_sshonizer_agen docker3"

unbind C-q
bind-key -r C-q run-shell "$tmux_sshonizer_agen prodkubecp3"

unbind C-a
bind-key -r C-a run-shell "$tmux_sshonizer_agen dns3"

unbind C-d
bind-key -r C-d run-shell "$tmux_sshonizer_agen lb3"

unbind C-f
bind-key -r C-f run-shell "$tmux_sshonizer_agen prodkubew3"

unbind C-x
bind-key -r C-x run-shell "$tmux_sshonizer_agen storage3"

unbind C-c
bind-key -r C-c run-shell "$tmux_sshonizer_agen xocli3"

unbind f
bind-key -r f run-shell "tmux neww $tmux_sessionizer"

unbind 5
# Notice I'm passing 2 arguments, it's going to fzf inside that 2nd argument
bind-key -r 5 run-shell "tmux neww $tmux_sessionizer irrelevant-arg ~/github/goto"
unbind C-v
bind-key -r C-v run-shell "tmux neww $ssh_select"

unbind C-n
bind-key -r C-n run-shell "tmux neww $ssh_config_select"

unbind 1
bind-key -r 1 run-shell "tmux neww $daily_note"

unbind 2
bind-key -r 2 run-shell "tmux neww $karabiner_rules"

unbind 6
bind-key -r 6 run-shell "tmux neww $colorscheme_selector"

###############################################################################

# Reload the tmux configuration, display a 2 second message
unbind r
bind r source-file ~/.config/tmux/tmux.conf
# bind r source-file ~/.tmux.conf \; display-message -d 2000 "Configuration reloaded!"

# Bind pane synchronization to Ctrl-b s
unbind Q
bind Q setw synchronize-panes

# Go to previous window, I'm using 'p' to change to window 4
unbind m
bind m previous-window

# Resize pane to zoom so it occupies the entire screen
unbind M
bind -r M resize-pane -Z

bind -r Left resize-pane -L 1
bind -r Down resize-pane -D 1
bind -r Up resize-pane -U 1
bind -r Right resize-pane -R 1

# Change the keybinding to enter copy mode from 'prefix + [' to 'prefix + v'
unbind v
bind v copy-mode

# Bind Esc to exit copy-mode
bind-key -T copy-mode-vi 'Escape' send -X cancel

# start selecting text with "v", this is visual mode
bind-key -T copy-mode-vi 'v' send -X begin-selection
# copy text with "y"
bind-key -T copy-mode-vi 'y' send -X copy-selection

# Thi is what allows me to press gh and gl to to to the beginning and end of
# line respectively when in copy-mode (visual mode)
# Unbind the default 'g' key in copy-mode-vi
unbind -T copy-mode-vi g
# Define a custom key table for extended copy-mode bindings
bind-key -T copy-mode-vi 'g' switch-client -T copy-mode-extended
# Bind 'h' in the extended copy-mode to go to the beginning of the line
bind-key -T copy-mode-extended 'h' send -X start-of-line \; switch-client -T copy-mode-vi
# Bind 'l' in the extended copy-mode to go to the end of the line
bind-key -T copy-mode-extended 'l' send -X end-of-line \; switch-client -T copy-mode-vi

# don't exit copy mode when dragging with mouse
unbind -T copy-mode-vi MouseDragEnd1Pane

# Bind Alt-t <M-t> in copy-mode
# This allows me to toggle my neovim terminal even if I'm in tmux copy-mode
bind-key -T copy-mode M-t run-shell "~/github/dotfiles-latest/tmux/tools/linkarzu/simple_toggle.sh"
bind-key -T copy-mode-vi M-t run-shell "~/github/dotfiles-latest/tmux/tools/linkarzu/simple_toggle.sh"

# https://github.com/leelavg/dotfiles/blob/897aa883a/config/tmux.conf#L30-L39
# https://scripter.co/command-to-every-pane-window-session-in-tmux/
# Send the same command to all panes/windows in current session
bind M-e command-prompt -p "Command:" \
  "run \"tmux list-panes -s -F '##{session_name}:##{window_index}.##{pane_index}' \
                | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""

# Send the same command to all panes/windows/sessions
bind M-E command-prompt -p "Command:" \
  "run \"tmux list-panes -a -F '##{session_name}:##{window_index}.##{pane_index}' \
              | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""

# Increase scroll history
set-option -g history-limit 10000

# New windows normally start at 0, but I want them to start at 1 instead
set -g base-index 1

# With this set to off
# when you close the last window in a session, tmux will keep the session
# alive, even though it has no windows open. You won't be detached from
# tmux, and you'll remain in the session
set -g detach-on-destroy off

# Imagine if you have windows 1-5, and you close window 3, you are left with
# 1,2,4,5, which is inconvenient for my navigation method seen below
# renumbering solves that issue, so if you close 3 youre left with 1-4
set -g renumber-windows on

# Enable mouse support to resize panes, scrolling, etc
set -g mouse on

# I had to set this to on for osc52 to work
# https://github.com/ojroques/nvim-osc52
set -s set-clipboard on

# If I'm in insert mode typing text, and press escape, it will wait this amount
# of time to switch to normal mode when I press escape
# this setting was recommended by neovim `escape-time` (default 500)
# Can be set to a lower value, like 10 for it to be faster
set-option -sg escape-time 100

set -g status-position top
# set -g status-position bottom

set -g @plugin 'tmux-plugins/tpm'

# set -g @plugin 'catppuccin/tmux#v0.3.0'
set -g @plugin 'catppuccin/tmux#latest'
# or frappe, macchiato, mocha
set -g @catppuccin_flavor 'frappe'

run-shell "~/.config/tmux/tools/linkarzu/set_tmux_colors.sh"

set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_status_modules_left "session"

# set -g @catppuccin_status_modules_right "none"
# set -g @catppuccin_status_modules_right "directory"
# set -g @catppuccin_directory_text " linkarzu   If you like the video like it  , and remember to subscribe   "
# set -g @catppuccin_directory_color "#04d1f9"
# set -g @catppuccin_directory_icon "null"

# As 'man tmux' specifies:
# Execute the first command if shell-command (run with /bin/sh) returns success or the second command otherwise
# if-shell 'test -f ~/github/dotfiles-latest/youtube-banner.txt' {
#     set -g @catppuccin_status_modules_right "directory"
#     set -g @catppuccin_directory_text " linkarzu   like   subscribe   "
#     set -g @catppuccin_directory_icon "null"
# } {
# }

set -g @catppuccin_status_modules_right "null"

# `user` and `host` are kind of useless, dont change when you ssh to devices
set -g @catppuccin_status_modules_right "directory user host"
set -g @catppuccin_status_left_separator " "
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_connect_separator "no"

set -g @catppuccin_directory_text "#{pane_current_path}"

# This can be set to "icon" or "all" if set to "all" the entire tmux session
# name has color
# set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_fill "all"

# If you set this to off, the tmux line completely dissappears
set -g @catppuccin_status_default "on"

set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-capture-pane-contents 'on'

# automatically saves sessions for you every 15 minutes (this must be the last plugin)
# https://github.com/tmux-plugins/tmux-continuum
set -g @plugin 'tmux-plugins/tmux-continuum'
# enable tmux-continuum functionality
set -g @continuum-restore 'off'
# Set the save interval in minutes, default is 15
set -g @continuum-save-interval '5'

run '~/.tmux/plugins/tpm/tpm'
